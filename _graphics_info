# Copyright 2016 Peter Möller, Pierre Moreau
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



######################################################################################
##########################    G R A P H I C S   I N F O    ###########################
######################################################################################
Section="Graphics"

GraphicsTempFile="/tmp/.${ScriptName}_Graphics.$$.txt"


printf "\n${ESC}${WhiteBack};${BlackFont};${BoldFace}mGraphics info                                                              ${Reset}\n"

if [ -z "${OS/Linux/}" ]; then
  # Loook at:
  # - lsmod | grep drm
  # - nvidia-smi
  # - glxinfo | egrep "vendor|version"
  # - xdpyinfo
  # - lspci -v | awk '/VGA|3D/,/^$/' | egrep "^[0-9]|^\s*Subsystem:|^\s*Kernel "
  # for info about the graphics environment
  FormatstringGraphics="%-34s%-52s%-18s%-10s"
  # 'NVIDIA Corporation              GT218 [NVS 300]                          512 GB          NVIDIA'
  # 'Matrox Electronics Systems Ltd. MGA G200e [Pilot] ServerEngines (SEP1)   Shared memory   Unknown'
  printf "${ESC}${UnderlineFace}m${FormatstringGraphics}${Reset}\n" "Vendor" "Graphics Card"  "Graphics Memory" "Driver"
  for BusId in $(lspci | egrep "VGA|3D" | cut -d' ' -f1)
  do
    i="$(lspci -s $BusId | cut -d: -f3 | awk '{print $1"_"$2}')"
    MemoryRAW=""
    Memory=""
    # For a list of VendorID:s, see: https://pci-ids.ucw.cz/read/PC?restrict=
    VendorCardNr="$(lspci -vnn | egrep "VGA|3D|2D" | grep "$BusId" | egrep -o "\[[0-9a-z]{4}:" | sed -e 's/://g' -e 's/\[//g')"
    # Ex: VendorCardNr='102b'
    VendorCardName="$(grep -i "^#$VendorCardNr" ${DirName}/GPU_vendors.txt | cut -d: -f2)"
    # Ex: VendorCardName='Matrox Electronic Systems Ltd.'
    GraphicsCard="$(lspci -s $BusId | grep -oP ".*$VendorCardName\s+\K.*\](?=\ )")"
    # Ex: GraphicsCard='MGA G200e [Pilot] ServerEngines'
    # Below is no longer used, but retained for some reason (maybee we have to revert to this in the future...)
    #Card="$(grep -B1 "${i/_/ }" "$GraphicsTempFile" | head -1 | cut -d: -f2 | sed 's/\ *//')"
    #Vendor="$(grep "${i/_/ }" "$GraphicsTempFile" | cut -d: -f2 | sed 's/\ *//')"
    MemoryRAW="$(grep "Memory:" /var/log/Xorg.0.log 2>/dev/null | grep $(echo ${i/_/ } | awk '{print $1}') | cut -d: -f3 | sed 's/\ *//')"
    [[ -n "$(echo $MemoryRAW | grep -o "kBytes")" ]] && Memory="$(echo "$(echo "$MemoryRAW" | awk '{print $1}') / 1024" | bc) MB"
    [[ -z "$MemoryRAW" ]] && Memory="$(dmesg | grep "nouveau 0000:$BusId: DRM: VRAM:" | cut -d: -f6 | cut -d' ' -f2-3)"; MemoryRAW=$Memory
    [[ -z "$MemoryRAW" ]] && Memory="Shared memory"
    Driver="$(lspci -v -s $BusId | grep "driver in use" | cut -d: -f2 | cut -d' ' -f2)"
    #printf "$FormatstringGraphics\n" "${Vendor:-Unknown vendor}" "${Card:-Unknown graphics card}" "${Memory:-Unknown}" "${Driver:-Unknown driver}"
    printf "$FormatstringGraphics\n" "${VendorCardName:-Unknown vendor}" "${GraphicsCard:-Unknown graphics card}" "${Memory:-Unknown}" "${Driver:-Unknown driver}"
  done
  if [ $Info -eq 1 ]; then
    printf "${InfoColor}(Use \"lspci -vnn | egrep \"VGA|3D|2D\"\" to get info about graphics cards)${Reset}\n"
    printf "${InfoColor}(Use \"grep \"Memory:\" /var/log/Xorg.0.log\" to get amount of VRAM)${Reset}\n"
    printf "${InfoColor}(Use \"lspci -v -s NUMBER | grep \"driver in use\"\" to get info about graphics driver – where NUMBER is the first word on the row with the graphics card)${Reset}\n"
  fi
  
  echo ""
elif [ -z "${OS/Darwin/}" ]; then
  FormatstringGraphics="%-28s%-20s"

  system_profiler -xml SPDisplaysDataType 2>/dev/null > "$GraphicsTempFile"
  # Get info about Graphics Card
  GraphicsCardData="$(xmllint --xpath '//dict/key[text()="sppci_model" or text()="spdisplays_vram" or text()="sppci_model"]/following-sibling::string[1]' $GraphicsTempFile)"
  # Ex, iMac:        GraphicsCardData='<string>4096 MB</string><string>NVIDIA GeForce GTX 780M</string>'
  # Ex, Mac Pro:     GraphicsCardData='<string>3072 MB</string><string>AMD FirePro D500</string><string>3072 MB</string><string>AMD FirePro D500</string>'
  # Ex, MacBook Pro: GraphicsCardData='<string>Intel HD Graphics 4000</string><string>1024 MB</string><string>NVIDIA GeForce GT 650M</string>'
  # Ex, Mac mini:    GraphicsCardData='<string>Intel Iris</string>'

  # Dig the graphics cards and their memory from $GraphicsTempFile. Replace ' ' with '_' to make the array work
  array=($(xmllint --xpath '//dict/key[text()="sppci_model" or text()="spdisplays_vram" or text()="sppci_model"]/following-sibling::string[1]' $GraphicsTempFile | sed -e 's/ /_/g' -e 's/\<string\>//g' -e 's/\<\/string\>/ /g'))
  # Ex: ${array[@]}='4096_MB NVIDIA_GeForce_GTX_780M'
  # Ex: ${array[@]}='Intel_HD_Graphics_4000 1024_MB NVIDIA_GeForce_GT_650M'
  # Ex: ${array[@]}='3072_MB AMD_FirePro_D500 3072_MB AMD_FirePro_D500'
  # The array consists of:
  # - a single element:   an integrated graphics card name (and no memory info since it's shared)
  # - a pair of elements: amount of VRAM and graphics card name (for “real” GPU:s)
  # Thus we need to traverse the array accordingly

  # Cycle through the array and print it
  printf "${ESC}${UnderlineFace}m${FormatstringGraphics}${Reset}\n" "Graphics Card"  "Graphics memory"
  i=0
  while [ $i -lt $(echo "${#array[@]} / 2 + 1" | bc) ]; do
    if [ -n "$(echo ${array[$i]} | grep -o "^[A-Z]")" ]; then
      # If the pair starts with text (instead of a number), it denotes an integrated graphics card
      printf "$FormatstringGraphics\n" "${array[$i]//_/ }:" "no dedicated graphics memory"
      i=$((i+1))
    else
      # Else it's a “real” GPU with a memory specification
      printf "$FormatstringGraphics\n" "${array[$i+1]//_/ }:" "${array[$i]//_/ }"
      # Increment by teo to get right for the next pair
      i=$((i+2))
    fi
  done
  [[ $Info -eq 1 ]] &&  printf "${InfoColor}(Use \"system_profiler SPDisplaysDataType\" to get info about graphics cards and displays)${Reset}\n"
fi


rm -rf $GraphicsTempFile 2>/dev/null