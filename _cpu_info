# Copyright 2016 Peter Möller, Pierre Moreau
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



######################################################################################
###############################    C P U   I N F O    ################################
######################################################################################
Section="CPU"

CPUTempFile="/tmp/.${ScriptName}_CPU.$$.txt"


printf "\n${ESC}${WhiteBack};${BlackFont};${BoldFace}mCPU info                                                                   ${Reset}\n"

if [ -z "${OS/Linux/}" ]; then
    # Use 'lscpu' for CPU info:
    LSCPU="$(lscpu | grep -E "^Architecture:|^CPU\(s\):|^\s*Model name:|^Vendor ID:|^\s*Socket\(s\):")"
    # Ex: LSCPU='Architecture:                       x86_64
    #            CPU(s):                             2
    #            Vendor ID:                          GenuineIntel
    #            Model name:                         Intel(R) Xeon(R) CPU E5-2667 v4 @ 3.20GHz
    #            Socket(s):                          2'
    #
    # Ex: LSCPU='Architecture:                       ppc64le
    #            CPU(s):                             160
    #            Socket(s):                          4
    #            Model name:                         POWER8E (raw), altivec supported'
    #
    # Ex: LSCPU='Architecture:                         x86_64
    #            CPU(s):                               1
    #            Vendor ID:                            GenuineIntel
    #            Model name:                           Intel(R) Xeon(R) CPU E5-2667 v4 @ 3.20GHz
    #            Socket(s):                            1'
    # Ex: LSCPU='Architecture:                         x86_64
    #            CPU(s):                               128
    #            Vendor ID:                            AuthenticAMD
    #            Model name:                           AMD EPYC 7713P 64-Core Processor
    #            Socket(s):                            1'
    # 
    # Ex: LSCPU='Architecture:                         x86_64
    #            CPU(s):                               24
    #            Vendor ID:                            GenuineIntel
    #            Model name:                           Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz
    #            Socket(s):                            2'

    CPU="$(echo "$LSCPU" | grep -E "^\s*Model name:" | cut -d: -f2 | sed 's/^\ *//; s/(R)/®/g;s/(TM)/™/g')"  # Ex: CPU='Intel® Xeon® CPU E5-2667 v4 @ 3.20GHz'
    NbrCPUs=$(echo "$LSCPU" | grep -E "^\s*Socket\(s\):" | cut -d: -f2 | sed 's/^\ *//')                     # Ex: NbrCPUs=2
    NbrCoresEachCPU=$(echo "$LSCPU" | grep -E "\s*Core\(s\) per socket:" | cut -d: -f2 | sed 's/^\ *//')     # Ex: NbrCoresEachCPU=5
    [[ $Info -eq 1 ]] &&  CPUInfo="(Use \"lscpu\" for CPU info)" || CPUInfo=""
    [[ $Info -eq 1 ]] &&  NumCPUInfo="(Use \"lscpu\" for info on number of CPU:s)" || NumCPUInfo=""
    [[ $Info -eq 1 ]] &&  NumCoresInfo="(Use \"lscpu\" for info on muber of cores/CPU)" || NumCoresInfo=""
elif [ -z "${OS/Darwin/}" ]; then
    CPU="$(sysctl -n machdep.cpu.brand_string)"
    # Ex: CPU='Intel(R) Xeon(R) CPU E5-1650 v2 @ 3.50GHz'
    # Ex: CPU='Intel(R) Core(TM)2 Duo CPU     P7350  @ 2.00GHz'
    # Ex: CPU='Apple M1'

    # Take care of the Apple M-series chip since they present themselves differently
    if [ -z "${CPU/Apple M[0-9]}" ]; then
        NbrCPUs=1
        CoresTotal=$(grep "Total Number of Cores:" $OSTempFile | cut -d: -f2 | awk '{print $1}')
    else
        NbrCPUs=$(grep "Number of Processors:" $OSTempFile | cut -d: -f2 | sed 's/\ *//')
        # Alternate method: NbrCPU="$(sysctl -n hw.packages)"
        CoresTotal=$(grep "Total Number of Cores:" $OSTempFile | cut -d: -f2 | sed 's/\ *//')
    fi
    NbrCoresEachCPU=$(echo " $CoresTotal / $NbrCPUs" | bc)

    [[ $Info -eq 1 ]] &&  CPUInfo="(Use \"sysctl -n machdep.cpu.brand_string\" for CPU info)" || CPUInfo=""
    [[ $Info -eq 1 ]] &&  NumCPUInfo="(Use \"system_profiler SPHardwareDataType\" for info on number of CPU:s)" || NumCPUInfo=""
    [[ $Info -eq 1 ]] &&  NumCoresInfo="(Use \"system_profiler SPHardwareDataType\" for info on muber of cores/CPU)" || NumCoresInfo=""
fi

#printf "$Formatstring\n" "CPU:" "${CPU//(R)/®}"
printf "$Formatstring\n" "CPU:" "$CPU" "$CPUInfo"
printf "$Formatstring\n" "Number of CPUs:" "${NbrCPUs}" "$NumCPUInfo"
printf "$Formatstring\n" "Cores/CPU:" "${NbrCoresEachCPU:-1}" "$NumCoresInfo"


rm $CPUTempFile 2>/dev/null
